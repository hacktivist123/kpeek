name: Auto-Tag, Release & Docker Push

on:
  push:
    branches: [ "main" ]

jobs:
  release:
    runs-on: ubuntu-latest

    steps:

      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Bump Version and Create Tag
        id: bump_version
        uses: anothrnick/github-tag-action@1.71.0
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          DEFAULT_BRANCH: "main"   
          RELEASE_BRANCHES: "main"
          WITH_V: true       

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build kpeek with version
        run: |
          echo "Building kpeek with version: ${{ steps.bump_version.outputs.new_tag }}"
          go build -ldflags "-X github.com/hacktivist123/kpeek/cmd.version=${{ steps.bump_version.outputs.new_tag }}" -o kpeek .

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            coderblvck/kpeek:latest
            coderblvck/kpeek:${{ steps.bump_version.outputs.new_tag }}
          cache-from: type=registry,ref=coderblvck/kpeek:buildcache
          cache-to: type=registry,ref=coderblvck/kpeek:buildcache,mode=max
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.ACCESS_TOKEN }}

      - name: Create GitHub Release
        if: ${{ success() }}
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.bump_version.outputs.new_tag }}
          release_name: "Release ${{ steps.bump_version.outputs.new_tag }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
